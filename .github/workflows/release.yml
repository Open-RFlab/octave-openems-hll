name: Release

on:
  workflow_dispatch:
  release:
    types: published

env:
  PACKAGE_NAME: openems-hll
  DISTRO: buster,bionic,cosmic,disco,eoan,bullseye,focal

jobs:
  run:
    runs-on: ubuntu-20.04

    steps:
    - name: Dependencies
      run: |
        mkdir -p /usr/share/man/man1
        sudo apt update
        sudo apt install -y octave debhelper dh-octave devscripts equivs fakeroot
        sudo octave --eval 'pkg install -global -forge generate_html'

    - name: Checkout
      uses: actions/checkout@v2

    - name: Package Octave
      run: make dist

    - name: Package Debian
      run: |
        sudo mk-build-deps --install --tool='apt-get --no-install-recommends --yes' debian/control
        fakeroot debian/rules binary

    - name: Deploy .deb on Bintray
      run: |
        curl \
          -T ../octave-${{ env.PACKAGE_NAME }}_${GITHUB_REF##*/}_all.deb \
          --user thomaslepoix:${{ secrets.BINTRAY_API_KEY }} \
          https://api.bintray.com/content/open-rflab/debian/octave-${{ env.PACKAGE_NAME }}/${GITHUB_REF##*/}/pool/o/octave-${{ env.PACKAGE_NAME }}/octave-octave-${{ env.PACKAGE_NAME }}_${GITHUB_REF##*/}_all.deb \
          -H 'X-Bintray-Debian-Distribution: ${{ env.DISTRO }}' \
          -H 'X-Bintray-Debian-Component: main' \
          -H 'X-Bintray-Debian-Architecture: all' \
          -H 'X-Bintray-Publish: 1' \
          -H 'X-Bintray-Override: 1'

    - name: Extract informations
      id: extract
      shell: bash
      run: |
        echo "##[set-output name=tag;]$(echo ${GITHUB_REF##*/})"
        echo "##[set-output name=upload_url;]$(curl -sL https://api.github.com/repos/Open-RFlab/octave-${{ env.PACKAGE_NAME }}/releases/tags/${GITHUB_REF##*/} | jq -r '.upload_url')"

    - name: Deploy .tar.gz on Github
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.extract.outputs.upload_url }}
        asset_path: target/${{ env.PACKAGE_NAME }}-${{ steps.extract.outputs.tag }}.tar.gz
        asset_name: ${{ env.PACKAGE_NAME }}-${{ steps.extract.outputs.tag }}.tar.gz
        asset_content_type: application/x-gz-compressed-tar
